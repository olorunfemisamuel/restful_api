[supervisord]
; Run supervisor in the foreground, essential for Docker containers.
nodaemon=true
logfile=/var/log/supervisor/supervisord.log
pidfile=/var/run/supervisord.pid
childlogdir=/var/log/supervisor
loglevel=info ; You can change this to debug, warn, error, fatal for more/less verbosity

; ==============================================================================
; PHP-FPM Process
; ==============================================================================
[program:php-fpm]
; Command to start PHP-FPM. --nodaemon is important for Supervisor to manage it.
command=/usr/local/sbin/php-fpm --nodaemon
autostart=true         ; Start automatically when supervisor starts
autorestart=true       ; Restart if it stops unexpectedly
startretries=5         ; Number of times to try restarting before giving up
priority=5             ; Lower number means higher priority (starts first)
user=www-data          ; Run PHP-FPM as the www-data user
stdout_logfile=/var/log/supervisor/php-fpm_stdout.log
stderr_logfile=/var/log/supervisor/php-fpm_stderr.log
stdout_logfile_maxbytes=1MB
stderr_logfile_maxbytes=1MB
stopasgroup=true       ; Stop the whole process group
killasgroup=true       ; Kill the whole process group

; ==============================================================================
; Nginx Process
; ==============================================================================
[program:nginx]
; Command to start Nginx. -g "daemon off;" is crucial for it to run in foreground.
command=/usr/sbin/nginx -g "daemon off;"
autostart=true
autorestart=true
startretries=5
priority=10            ; Higher priority, so PHP-FPM starts before Nginx
user=root              ; Nginx master process typically runs as root
stdout_logfile=/var/log/supervisor/nginx_stdout.log
stderr_logfile=/var/log/supervisor/nginx_stderr.log
stdout_logfile_maxbytes=1MB
stderr_logfile_maxbytes=1MB
stopasgroup=true
killasgroup=true

; ==============================================================================
; Optional: Laravel Queue Worker (Uncomment and adjust if you need it)
; ==============================================================================
; If your application uses queues (e.g., Laravel Queues), you'll need a worker.
; Make sure your application's storage/logs directory is writable by www-data.
;
; [program:laravel-worker]
; process_name=%(program_name)s_%(process_num)02d ; Allows multiple instances with unique names
; command=php /var/www/html/artisan queue:work --sleep=3 --tries=3 --daemon --verbose --timeout=60
; autostart=true
; autorestart=true
; numprocs=1             ; Number of worker processes to run (adjust based on load)
; user=www-data          ; Run as the www-data user
; directory=/var/www/html ; Working directory for the command
; stdout_logfile=/var/www/html/storage/logs/supervisor_queue_worker.log
; stderr_logfile=/var/www/html/storage/logs/supervisor_queue_worker_error.log
; stopwaitsecs=3600      ; Max 1 hour to finish current job before being terminated
; redirect_stderr=true   ; Redirect stderr to stdout_logfile
; stopasgroup=true
; killasgroup=true